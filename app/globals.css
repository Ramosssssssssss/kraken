@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

:root {
  /* Updated color tokens for KRKN dark theme with black, dark purple, and white palette */
  --background: oklch(0 0 0); /* Black background */
  --foreground: oklch(1 0 0); /* White text */
  --card: oklch(0.1 0 0); /* Dark gray for cards */
  --card-foreground: oklch(1 0 0); /* White text in cards */
  --popover: oklch(0 0 0 / 0.9); /* Semi-transparent black */
  --popover-foreground: oklch(1 0 0); /* White text in popovers */
  --primary: oklch(0.45 0.15 280); /* Dark purple #6b46c1 */
  --primary-foreground: oklch(1 0 0); /* White text on primary */
  --secondary: oklch(0.95 0 0); /* Light gray */
  --secondary-foreground: oklch(0 0 0); /* Black text on secondary */
  --muted: oklch(0.2 0 0); /* Muted dark */
  --muted-foreground: oklch(0.7 0 0); /* Light gray text */
  --accent: oklch(0.45 0.15 280); /* Dark purple accent */
  --accent-foreground: oklch(1 0 0); /* White text on accent */
  --destructive: oklch(0.45 0.15 280); /* Dark purple for destructive */
  --destructive-foreground: oklch(1 0 0); /* White text on destructive */
  --border: oklch(0.27 0 0); /* Dark border */
  --input: oklch(0.1 0 0); /* Dark input fields */
  --ring: oklch(0.45 0.15 280 / 0.5); /* Dark purple ring effect */
  --chart-1: oklch(0.45 0.15 280); /* Dark purple */
  --chart-2: oklch(1 0 0); /* White */
  --chart-3: oklch(0.95 0 0); /* Light gray */
  --chart-4: oklch(0 0 0); /* Black */
  --chart-5: oklch(0.2 0 0); /* Dark gray */
  --radius: 0.5rem;
  --sidebar: oklch(0.1 0 0); /* Dark sidebar */
  --sidebar-foreground: oklch(1 0 0); /* White sidebar text */
  --sidebar-primary: oklch(0.45 0.15 280); /* Dark purple sidebar primary */
  --sidebar-primary-foreground: oklch(1 0 0); /* White text */
  --sidebar-accent: oklch(0.95 0 0); /* Light gray accent */
  --sidebar-accent-foreground: oklch(0 0 0); /* Black text */
  --sidebar-border: oklch(0.27 0 0); /* Dark border */
  --sidebar-ring: oklch(0.45 0.15 280 / 0.5); /* Dark purple ring */
}

.dark {
  /* Dark mode uses same tokens since KRKN is inherently dark themed */
  --background: oklch(0 0 0);
  --foreground: oklch(1 0 0);
  --card: oklch(0.1 0 0);
  --card-foreground: oklch(1 0 0);
  --popover: oklch(0 0 0 / 0.9);
  --popover-foreground: oklch(1 0 0);
  --primary: oklch(0.45 0.15 280);
  --primary-foreground: oklch(1 0 0);
  --secondary: oklch(0.2 0 0);
  --secondary-foreground: oklch(1 0 0);
  --muted: oklch(0.2 0 0);
  --muted-foreground: oklch(0.7 0 0);
  --accent: oklch(0.45 0.15 280);
  --accent-foreground: oklch(1 0 0);
  --destructive: oklch(0.45 0.15 280);
  --destructive-foreground: oklch(1 0 0);
  --border: oklch(0.27 0 0);
  --input: oklch(0.1 0 0);
  --ring: oklch(0.45 0.15 280 / 0.5);
  --chart-1: oklch(0.45 0.15 280);
  --chart-2: oklch(1 0 0);
  --chart-3: oklch(0.95 0 0);
  --chart-4: oklch(0 0 0);
  --chart-5: oklch(0.2 0 0);
  --sidebar: oklch(0.1 0 0);
  --sidebar-foreground: oklch(1 0 0);
  --sidebar-primary: oklch(0.45 0.15 280);
  --sidebar-primary-foreground: oklch(1 0 0);
  --sidebar-accent: oklch(0.2 0 0);
  --sidebar-accent-foreground: oklch(1 0 0);
  --sidebar-border: oklch(0.27 0 0);
  --sidebar-ring: oklch(0.45 0.15 280 / 0.5);
}

@theme inline {
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Added custom animations for kraken tentacles and scroll effects */
@keyframes tentacle-wave {
  0%,
  100% {
    transform: rotate(0deg) scale(1);
  }
  50% {
    transform: rotate(5deg) scale(1.05);
  }
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

.tentacle-wave {
  animation: tentacle-wave 3s ease-in-out infinite;
}

.float {
  animation: float 4s ease-in-out infinite;
}

/* Added advanced animations and visual effects for enhanced design */
@keyframes kraken-emerge {
  0% {
    transform: translateY(100px) scale(0.8);
    opacity: 0;
  }
  100% {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
}

@keyframes text-glow {
  0%,
  100% {
    text-shadow: 0 0 10px oklch(0.45 0.15 280 / 0.5);
  }
  50% {
    text-shadow: 0 0 20px oklch(0.45 0.15 280 / 0.8), 0 0 30px oklch(0.45 0.15 280 / 0.6);
  }
}

@keyframes particle-float {
  0%,
  100% {
    transform: translateY(0) translateX(0) rotate(0deg);
  }
  33% {
    transform: translateY(-20px) translateX(10px) rotate(120deg);
  }
  66% {
    transform: translateY(-10px) translateX(-15px) rotate(240deg);
  }
}

@keyframes slide-in-left {
  0% {
    transform: translateX(-100px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slide-in-right {
  0% {
    transform: translateX(100px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes scale-in {
  0% {
    transform: scale(0.8);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(4);
    opacity: 0;
  }
}

@keyframes matrix-rain {
  0% {
    transform: translateY(-100vh);
  }
  100% {
    transform: translateY(100vh);
  }
}

.kraken-emerge {
  animation: kraken-emerge 1.5s ease-out forwards;
}

.text-glow {
  animation: text-glow 3s ease-in-out infinite;
}

.particle-float {
  animation: particle-float 6s ease-in-out infinite;
}

.slide-in-left {
  animation: slide-in-left 0.8s ease-out forwards;
}

.slide-in-right {
  animation: slide-in-right 0.8s ease-out forwards;
}

.scale-in {
  animation: scale-in 0.6s ease-out forwards;
}

.hover-lift {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-8px) scale(1.02);
  box-shadow: 0 20px 40px oklch(0 0 0 / 0.3), 0 0 30px oklch(0.45 0.15 280 / 0.2);
}

.glass-effect {
  backdrop-filter: blur(10px);
  background: oklch(0.1 0 0 / 0.8);
  border: 1px solid oklch(0.45 0.15 280 / 0.3);
}

.neon-border {
  border: 2px solid transparent;
  background: linear-gradient(oklch(0.1 0 0), oklch(0.1 0 0)) padding-box,
    linear-gradient(45deg, oklch(0.45 0.15 280), oklch(1 0 0), oklch(0.45 0.15 280)) border-box;
}

.cyber-grid {
  background-image: linear-gradient(oklch(0.45 0.15 280 / 0.1) 1px, transparent 1px),
    linear-gradient(90deg, oklch(0.45 0.15 280 / 0.1) 1px, transparent 1px);
  background-size: 50px 50px;
}

.matrix-text {
  font-family: "Courier New", monospace;
  color: oklch(0.45 0.15 280);
  text-shadow: 0 0 10px oklch(0.45 0.15 280 / 0.8);
}

/* Added scroll-triggered animation utilities */
.scroll-reveal {
  opacity: 0;
  transform: translateY(50px);
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.scroll-reveal.revealed {
  opacity: 1;
  transform: translateY(0);
}

.stagger-1 {
  transition-delay: 0.1s;
}
.stagger-2 {
  transition-delay: 0.2s;
}
.stagger-3 {
  transition-delay: 0.3s;
}
.stagger-4 {
  transition-delay: 0.4s;
}

/* Adding advanced production-level animations and effects */
@keyframes holographic-shimmer {
  0% {
    background-position: -200% center;
  }
  100% {
    background-position: 200% center;
  }
}

@keyframes data-stream {
  0% {
    transform: translateY(-100%) scaleY(0);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateY(100vh) scaleY(1);
    opacity: 0;
  }
}

@keyframes neural-pulse {
  0%,
  100% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
}

@keyframes quantum-flicker {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
  75% {
    opacity: 0.9;
  }
}

@keyframes energy-wave {
  0% {
    transform: translateX(-100%) scaleX(0);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(100%) scaleX(1);
    opacity: 0;
  }
}

@keyframes morphing-tentacle {
  0%,
  100% {
    d: path("M20,80 Q30,20 50,40 Q70,60 80,20");
  }
  25% {
    d: path("M20,80 Q40,30 50,50 Q60,70 80,20");
  }
  50% {
    d: path("M20,80 Q25,40 50,30 Q75,50 80,20");
  }
  75% {
    d: path("M20,80 Q35,25 50,45 Q65,65 80,20");
  }
}

.holographic-shimmer {
  background: linear-gradient(
    90deg,
    transparent,
    oklch(0.45 0.15 280 / 0.4),
    oklch(1 0 0 / 0.6),
    oklch(0.45 0.15 280 / 0.4),
    transparent
  );
  background-size: 200% 100%;
  animation: holographic-shimmer 3s linear infinite;
}

.data-stream {
  animation: data-stream 4s linear infinite;
}

.neural-pulse {
  animation: neural-pulse 2s ease-in-out infinite;
}

.quantum-flicker {
  animation: quantum-flicker 0.1s ease-in-out infinite;
}

.energy-wave {
  animation: energy-wave 2s ease-in-out infinite;
}

.morphing-tentacle {
  animation: morphing-tentacle 8s ease-in-out infinite;
}

/* Enhanced hover effects with micro-interactions */
.micro-bounce:hover {
  animation: micro-bounce 0.6s ease-in-out;
}

@keyframes micro-bounce {
  0%,
  100% {
    transform: translateY(0);
  }
  25% {
    transform: translateY(-4px);
  }
  50% {
    transform: translateY(-2px);
  }
  75% {
    transform: translateY(-6px);
  }
}

.glow-intensify:hover {
  box-shadow: 0 0 20px oklch(0.45 0.15 280 / 0.6), 0 0 40px oklch(0.45 0.15 280 / 0.4), 0 0 60px
    oklch(0.45 0.15 280 / 0.2), inset 0 0 20px oklch(0.45 0.15 280 / 0.1);
  transform: scale(1.05);
  transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Advanced text effects for premium feel */
.premium-text {
  background: linear-gradient(135deg, oklch(1 0 0), oklch(0.45 0.15 280), oklch(1 0 0), oklch(0.45 0.15 280));
  background-size: 300% 300%;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: premium-gradient 4s ease-in-out infinite;
}

@keyframes premium-gradient {
  0%,
  100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

/* Sophisticated loading states and transitions */
.loading-skeleton {
  background: linear-gradient(90deg, oklch(0.1 0 0) 25%, oklch(0.15 0 0) 50%, oklch(0.1 0 0) 75%);
  background-size: 200% 100%;
  animation: loading-shimmer 1.5s infinite;
  border-radius: 4px;
}

/* Enhanced performance with will-change and transform3d */
.performance-optimized {
  will-change: transform, opacity;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
}

/* Advanced button interactions */
.premium-button {
  position: relative;
  overflow: hidden;
  isolation: isolate;
}

.premium-button::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(45deg, transparent, oklch(1 0 0 / 0.1), transparent);
  transform: translateX(-100%);
  transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.premium-button:hover::before {
  transform: translateX(100%);
}

.premium-button::after {
  content: "";
  position: absolute;
  inset: 2px;
  background: oklch(0.45 0.15 280);
  border-radius: inherit;
  z-index: -1;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.premium-button:hover::after {
  opacity: 0.1;
}

/* Cinematic scroll effects */
.parallax-slow {
  transform: translateY(calc(var(--scroll-y, 0) * 0.3px));
}
.parallax-medium {
  transform: translateY(calc(var(--scroll-y, 0) * 0.5px));
}
.parallax-fast {
  transform: translateY(calc(var(--scroll-y, 0) * 0.8px));
}

/* Professional fade-in sequences */
.fade-in-sequence > * {
  opacity: 0;
  transform: translateY(30px);
  animation: fade-in-up 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.fade-in-sequence > *:nth-child(1) {
  animation-delay: 0.1s;
}
.fade-in-sequence > *:nth-child(2) {
  animation-delay: 0.2s;
}
.fade-in-sequence > *:nth-child(3) {
  animation-delay: 0.3s;
}
.fade-in-sequence > *:nth-child(4) {
  animation-delay: 0.4s;
}
.fade-in-sequence > *:nth-child(5) {
  animation-delay: 0.5s;
}

@keyframes fade-in-up {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Ultra-premium production effects for final polish */
/* Advanced 3D transformations and cinematic effects */
@keyframes hologram-flicker {
  0%,
  100% {
    opacity: 1;
    filter: hue-rotate(0deg) brightness(1);
  }
  2% {
    opacity: 0.8;
    filter: hue-rotate(90deg) brightness(1.2);
  }
  4% {
    opacity: 1;
    filter: hue-rotate(0deg) brightness(1);
  }
  8% {
    opacity: 0.9;
    filter: hue-rotate(180deg) brightness(0.9);
  }
  10% {
    opacity: 1;
    filter: hue-rotate(0deg) brightness(1);
  }
}

@keyframes cyber-scan {
  0% {
    transform: translateY(-100%);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateY(100%);
    opacity: 0;
  }
}

@keyframes energy-pulse {
  0%,
  100% {
    box-shadow: 0 0 20px oklch(0.45 0.15 280 / 0.4), inset 0 0 20px oklch(0.45 0.15 280 / 0.1);
  }
  50% {
    box-shadow: 0 0 40px oklch(0.45 0.15 280 / 0.8), 0 0 60px oklch(0.45 0.15 280 / 0.6), 0 0 80px
      oklch(0.45 0.15 280 / 0.4), inset 0 0 30px oklch(0.45 0.15 280 / 0.2);
  }
}

@keyframes liquid-morph {
  0%,
  100% {
    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
  }
  25% {
    border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
  }
  50% {
    border-radius: 50% 60% 30% 60% / 30% 60% 70% 40%;
  }
  75% {
    border-radius: 60% 40% 60% 30% / 70% 40% 50% 60%;
  }
}

@keyframes digital-glitch {
  0%,
  100% {
    transform: translate(0);
    filter: hue-rotate(0deg);
  }
  10% {
    transform: translate(-2px, 2px);
    filter: hue-rotate(90deg);
  }
  20% {
    transform: translate(-2px, -2px);
    filter: hue-rotate(180deg);
  }
  30% {
    transform: translate(2px, 2px);
    filter: hue-rotate(270deg);
  }
  40% {
    transform: translate(2px, -2px);
    filter: hue-rotate(360deg);
  }
  50% {
    transform: translate(-1px, -1px);
    filter: hue-rotate(45deg);
  }
  60% {
    transform: translate(1px, 1px);
    filter: hue-rotate(135deg);
  }
}

@keyframes plasma-flow {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.hologram-effect {
  position: relative;
  animation: hologram-flicker 8s infinite;
}

.hologram-effect::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(45deg, transparent 30%, oklch(0.45 0.15 280 / 0.1) 50%, transparent 70%);
  animation: cyber-scan 3s infinite;
  pointer-events: none;
}

.energy-core {
  animation: energy-pulse 2s ease-in-out infinite;
  position: relative;
}

.energy-core::after {
  content: "";
  position: absolute;
  inset: -10px;
  background: radial-gradient(circle, oklch(0.45 0.15 280 / 0.3) 0%, oklch(0.45 0.15 280 / 0.1) 50%, transparent 100%);
  animation: liquid-morph 6s ease-in-out infinite;
  z-index: -1;
}

.digital-artifact {
  animation: digital-glitch 0.3s infinite;
  animation-play-state: paused;
}

.digital-artifact:hover {
  animation-play-state: running;
}

.plasma-background {
  background: linear-gradient(
    45deg,
    oklch(0 0 0),
    oklch(0.1 0 0),
    oklch(0.45 0.15 280 / 0.1),
    oklch(0.1 0 0),
    oklch(0 0 0)
  );
  background-size: 400% 400%;
  animation: plasma-flow 8s ease-in-out infinite;
}

/* Advanced typography effects */
.cyber-title {
  position: relative;
  background: linear-gradient(
    135deg,
    oklch(1 0 0) 0%,
    oklch(0.45 0.15 280) 25%,
    oklch(1 0 0) 50%,
    oklch(0.45 0.15 280) 75%,
    oklch(1 0 0) 100%
  );
  background-size: 200% 200%;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: plasma-flow 4s ease-in-out infinite;
}

.cyber-title::after {
  content: attr(data-text);
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, transparent 0%, oklch(0.45 0.15 280 / 0.8) 50%, transparent 100%);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: holographic-shimmer 2s linear infinite;
  z-index: -1;
}

/* Sophisticated micro-interactions */
.quantum-button {
  position: relative;
  overflow: hidden;
  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
}

.quantum-button::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(45deg, transparent, oklch(1 0 0 / 0.1), transparent);
  transform: translateX(-100%) rotate(45deg);
  transition: transform 0.6s cubic-bezier(0.23, 1, 0.32, 1);
}

.quantum-button:hover::before {
  transform: translateX(100%) rotate(45deg);
}

.quantum-button::after {
  content: "";
  position: absolute;
  inset: 2px;
  background: oklch(0.45 0.15 280 / 0.05);
  border-radius: inherit;
  opacity: 0;
  transition: opacity 0.4s ease;
}

.quantum-button:hover::after {
  opacity: 1;
}

.quantum-button:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 0 10px 30px oklch(0 0 0 / 0.3), 0 0 20px oklch(0.45 0.15 280 / 0.4), inset 0 1px 0 oklch(1 0 0 / 0.1);
}

/* Advanced scroll-triggered animations */
.reveal-on-scroll {
  opacity: 0;
  transform: translateY(60px) rotateX(15deg);
  transition: all 1s cubic-bezier(0.23, 1, 0.32, 1);
}

.reveal-on-scroll.revealed {
  opacity: 1;
  transform: translateY(0) rotateX(0deg);
}

/* Professional loading states */
.skeleton-loader {
  background: linear-gradient(90deg, oklch(0.1 0 0) 25%, oklch(0.15 0 0) 50%, oklch(0.1 0 0) 75%);
  background-size: 200% 100%;
  animation: loading-shimmer 1.5s infinite;
  border-radius: 4px;
}

/* Enhanced performance optimizations */
.gpu-accelerated {
  will-change: transform, opacity, filter;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Cinematic entrance animations */
.cinematic-entrance {
  opacity: 0;
  transform: translateY(100px) scale(0.8) rotateX(20deg);
  animation: cinematic-reveal 1.2s cubic-bezier(0.23, 1, 0.32, 1) forwards;
}

@keyframes cinematic-reveal {
  0% {
    opacity: 0;
    transform: translateY(100px) scale(0.8) rotateX(20deg);
  }
  60% {
    opacity: 0.8;
    transform: translateY(-10px) scale(1.02) rotateX(-2deg);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1) rotateX(0deg);
  }
}

/* Advanced hover states with physics */
.physics-hover {
  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.physics-hover:hover {
  transform: translateY(-8px) rotateX(5deg) rotateY(2deg);
  box-shadow: 0 20px 40px oklch(0 0 0 / 0.4), 0 0 30px oklch(0.45 0.15 280 / 0.3), inset 0 1px 0 oklch(1 0 0 / 0.1);
}

/* Ultra-smooth transitions */
.butter-smooth {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Professional focus states */
.focus-ring:focus-visible {
  outline: 2px solid oklch(0.45 0.15 280);
  outline-offset: 2px;
  box-shadow: 0 0 0 4px oklch(0.45 0.15 280 / 0.2);
}

/* Adding wave light effect animation for benefits section */
@keyframes light-wave {
  0% {
    transform: translateX(-100%) scaleX(0);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(100%) scaleX(1);
    opacity: 0;
  }
}

@keyframes wave-travel {
  0% {
    background-position: -200% center;
  }
  100% {
    background-position: 200% center;
  }
}

.light-wave {
  animation: light-wave 3s ease-in-out infinite;
}

.wave-border {
  position: relative;
  overflow: hidden;
}

.wave-border::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(
    90deg,
    transparent,
    oklch(0.45 0.15 280 / 0.4),
    oklch(0.45 0.15 280 / 0.8),
    oklch(1 0 0 / 0.6),
    oklch(0.45 0.15 280 / 0.8),
    oklch(0.45 0.15 280 / 0.4),
    transparent
  );
  background-size: 200% 100%;
  animation: wave-travel 3s ease-in-out infinite;
}

.wave-border::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(
    90deg,
    transparent,
    oklch(0.45 0.15 280 / 0.4),
    oklch(0.45 0.15 280 / 0.8),
    oklch(1 0 0 / 0.6),
    oklch(0.45 0.15 280 / 0.8),
    oklch(0.45 0.15 280 / 0.4),
    transparent
  );
  background-size: 200% 100%;
  animation: wave-travel 3s ease-in-out infinite;
  animation-delay: 1.5s;
}
/* End of wave light effect animations */

/* Adding glitch effect animations for contact section background */
@keyframes glitch-bg {
  0%,
  100% {
    transform: translate(0);
    filter: hue-rotate(0deg) contrast(1);
  }
  10% {
    transform: translate(-2px, 2px);
    filter: hue-rotate(90deg) contrast(1.05);
  }
  20% {
    transform: translate(-2px, -2px);
    filter: hue-rotate(180deg) contrast(0.95);
  }
  30% {
    transform: translate(2px, 2px);
    filter: hue-rotate(270deg) contrast(1.08);
  }
  40% {
    transform: translate(2px, -2px);
    filter: hue-rotate(360deg) contrast(0.98);
  }
  50% {
    transform: translate(-1px, -1px);
    filter: hue-rotate(45deg) contrast(1.02);
  }
  60% {
    transform: translate(1px, 1px);
    filter: hue-rotate(135deg) contrast(1.05);
  }
}

@keyframes glitch-lines {
  0% {
    clip-path: inset(40% 0 61% 0);
  }
  5% {
    clip-path: inset(92% 0 1% 0);
  }
  10% {
    clip-path: inset(43% 0 1% 0);
  }
  15% {
    clip-path: inset(25% 0 58% 0);
  }
  20% {
    clip-path: inset(54% 0 7% 0);
  }
  25% {
    clip-path: inset(58% 0 43% 0);
  }
  30% {
    clip-path: inset(54% 0 18% 0);
  }
  35% {
    clip-path: inset(92% 0 8% 0);
  }
  40% {
    clip-path: inset(20% 0 12% 0);
  }
  45% {
    clip-path: inset(50% 0 50% 0);
  }
  50% {
    clip-path: inset(13% 0 13% 0);
  }
  55% {
    clip-path: inset(40% 0 61% 0);
  }
  60% {
    clip-path: inset(25% 0 15% 0);
  }
  65% {
    clip-path: inset(54% 0 46% 0);
  }
  70% {
    clip-path: inset(58% 0 43% 0);
  }
  75% {
    clip-path: inset(54% 0 18% 0);
  }
  80% {
    clip-path: inset(92% 0 8% 0);
  }
  85% {
    clip-path: inset(20% 0 12% 0);
  }
  90% {
    clip-path: inset(50% 0 50% 0);
  }
  95% {
    clip-path: inset(13% 0 13% 0);
  }
  100% {
    clip-path: inset(40% 0 61% 0);
  }
}

@keyframes glitch-noise {
  0%,
  3%,
  5%,
  42%,
  44%,
  100% {
    opacity: 1;
    transform: scaleY(1);
  }
  4.3% {
    opacity: 1;
    transform: scaleY(1.7);
  }
  43% {
    opacity: 1;
    transform: scaleX(1.5);
  }
}

.glitch-background {
  position: relative;
  overflow: hidden;
}

.glitch-background::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(
    45deg,
    oklch(0 0 0) 0%,
    oklch(0.2 0 0) 25%,
    oklch(0.45 0.15 280 / 0.15) 50%,
    oklch(0.2 0 0) 75%,
    oklch(0 0 0) 100%
  );
  animation: glitch-bg 0.3s infinite;
  z-index: -2;
}

.glitch-background::after {
  content: "";
  position: absolute;
  inset: 0;
  background: repeating-linear-gradient(
    90deg,
    transparent,
    transparent 2px,
    oklch(0.45 0.15 280 / 0.08) 2px,
    oklch(0.45 0.15 280 / 0.08) 4px
  );
  animation: glitch-lines 0.4s infinite, glitch-noise 0.2s infinite;
  z-index: -1;
}
/* End of glitch effect animations */


@keyframes sheen {
  0%   { transform: translateX(-120%) rotate(12deg); }
  50%  { transform: translateX(180%)  rotate(12deg); }
  100% { transform: translateX(180%)  rotate(12deg); }
}
